# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: test1

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      app:
        description: "select app"
        required: true
        default: "test"
        type: choice
        options:
          - app1
          - app2
      job:
        description: "select action"
        required: true
        default: "build-and-publish"
        type: choice
        options:
          - build-and-publish
          - deploy-to-dev
          - deploy-to-qa

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REGISTRY: 382770461564.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: githubactiontest
jobs:
  build-and-publish:
    name: build-and-publish
    # if: github.event.inputs.job == 'build-and-publish'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Build and tag image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "github.event.inputs.job"
        echo ${{ github.event.inputs.job }}
        echo ${{ github.sha }}
        echo ${IMAGE_TAG::7}
        ./gradlew jibDockerBuild -Djib.to.image=githubactiontest:latest
        docker images
        docker tag githubactiontest:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: 'deploy'
    # if: github.event.inputs.job == 'deploy-to-dev'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: create ecs services/tasks
      run: |
        pwd
        ls -al
        aws ecs list-services --cluster test5
    
